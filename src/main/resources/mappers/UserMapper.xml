<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="cn.tedu.store.mapper.UserMapper">

	<!--为了解决名字不一样 使用 resultMap 对应下边select中的id -->
	<resultMap id="UserEntityMap" type="cn.tedu.store.entity.User">
		<id column="uid" property="uid" />
		<result column="is_delete" property="isDelete" />
		<result column="created_user" property="createdUser" />
		<result column="created_time" property="createdTime" />
		<result column="modified_user" property="modifiedUser" />
		<result column="modified_time" property="modifiedTime" />
	</resultMap>
	<!--插入用户信息 -->
	<!--Integer insert(); -->
	<insert id="insert">
		<!-- -->
		INSERT INTO t_user (
		<!--数据库各个字段的名字 -->
		username,password, salt, phone, email,
		gender,avatar, is_delete,
		created_user,
		created_time, modified_user,
		modified_time
		)
		VALUES(
		<!--属性需要对应user类中的各项属性 -->
		#{username}, #{password},

		#{salt}, #{phone},

		#{email},#{gender},

		#{avatar}, #{isDelete},

		#{createdUser}, #{createdTime},

		#{modifiedUser},#{modifiedTime}
		)
	</insert>



	<!--更改用户信息 id等于usermapper 的抽象方法updateinfoByuid if是运用了sql的动态语句 如果用户提交的信息为null 
		(if test="phone != null") 就不做修改 保留原有信息 -->
	<update id="updateinfoByuid">
		UPDATE
		t_user
		SET
		<if test="phone != null">
			phone=#{phone},
		</if>
		<if test="email != null">
			email=#{email},
		</if>
		<if test="gender != null">
			gender=#{gender},
		</if>
		modified_user=#{modifiedUser},
		modified_time=#{modifiedTime}
		WHERE
		uid=#{uid}




	</update>










	<!--更改密碼 Integer updatePasswordbyUid() -->
	<update id="updatePasswordbyUid">
		UPDATE t_user
		SET
		password=#{password},<!--字段名等於user屬性名 -->
		modified_user=#{modifiedUser},
		modified_time=#{modifiedTime}
		WHERE
		uid=#{uid}


	</update>

	<!--根據uid获取用户信息 User findByUid(Integer uid); -->
	<select id="findByUid" resultMap="UserEntityMap">

		SELECT
		*
		FROM
		t_user
		WHERE
		uid=#{uid}

	</select>


	<!--查询用户信息 -->
	<!--User findByUserName(); -->
	<!--因为有User类中有跟数据库名字不同的 所以需要使用resuleMap -->
	<select id="findByUserName" resultMap="UserEntityMap">
		SELECT * FROM
		t_user
		WHERE
		username=#{username}

	</select>


<!-- 这个是执行换头像的sql语句      -->
	<update id="updateAvater">
		UPDATE t_user
		SET
		avatar=#{avatar},
		modified_user=#{modifiedUser},
		modified_time=#{modifiedTime}
		WHERE
		uid=#{uid}
	</update>






</mapper>

